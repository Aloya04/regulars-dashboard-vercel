.createCardPage {
  display: flex; /* enables flexbox layout. */
  flex-direction: column; /* stacks child elements vertically. */
  flex: 1; /* allows this element to grow and take available space. */
  padding: 0 24px 24px 24px; 
  margin-left: 306px;
  transition: margin-left 0.3s ease, margin-right 0.3s ease; /* smooth transition for margin changes. */
  background-color: var(--background-primary);
  height: 100vh;
  overflow-y: auto; /* allows vertical scrolling if content overflows. */
}

.createCardPage.menuClosed {
  margin-left: 80px;
}

.stickyHeaderArea {
  position: sticky; /* makes this header stick to the top when scrolling. */
  top: 0;
  padding-top: 24px;
  margin: 0 -24px; 
  padding-left: 24px;
  padding-right: 24px;
  background-color: var(--background-secondary); 
  z-index: 50; /* ensures it stays above other content during scroll. */
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.07);
  padding-bottom: 16px;
}

.header {
  display: flex; /* enables flexbox for the header. */
  justify-content: space-between; /* spaces out title and any potential actions. */
  align-items: center; /* vertically aligns items in the center. */
}

.header h1 {
  font-size: 2.25rem;
  font-weight: 600;
  color: var(--text-primary);
}

.contentWrapper {
  display: flex; /* lays out main form and preview side-by-side. */
  gap: 32px; 
  padding-top: 24px; 
  flex-grow: 1; /* allows wrapper to take remaining vertical space. */
}

.mainFormArea {
  flex: 2; /* takes up 2/3 of the available space. */
  display: flex; 
  flex-direction: column; 
  gap: 24px; 
}

.formContainer {
  display: flex; 
  flex-direction: column; 
  gap: 20px; 
}

.previewContainer { 
  flex: 1; /* takes up 1/3 of the available space. */
  min-width: 300px; 
  max-width: 380px; 
}

.formGroup {
  display: flex; 
  flex-direction: column; 
}

.formGroup label {
  font-size: 0.9rem;
  font-weight: 500;
  color: var(--text-secondary);
  margin-bottom: 8px;
}


.formGroup input[type="text"],
.formGroup input[type="number"],
.formGroup select {
  width: 100%;
  padding: 12px 16px;
  border-radius: 10px;
  border: 1px solid var(--border-color);
  background-color: var(--solid-white-static); 
  color: var(--text-primary);
  font-size: 1rem;
  outline: none;
  transition: border-color 0.2s ease, box-shadow 0.2s ease; /* smooth transition for focus states. */
}

.formGroup input[type="text"]:focus,
.formGroup input[type="number"]:focus,
.formGroup select:focus {
  border-color: var(--text-primary); 
  box-shadow: 0 0 0 3px rgba(5, 5, 5, 0.15); 
}

.formGroup select {
  appearance: none; /* removes default system appearance for select dropdown. */
  -webkit-appearance: none;
  -moz-appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M4 6L8 10L12 6' stroke='%23575757' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E"); /* custom dropdown arrow. */
  background-repeat: no-repeat;
  background-position: right 16px center;
  padding-right: 40px; 
}

/* status button group styles */
.statusButtonGroup {
  display: flex; /* lays out status buttons in a row. */
  border-radius: 10px;
  overflow: hidden; 
  border: 1px solid var(--border-color); 
}

.statusButton {
  flex-grow: 1; /* allows buttons to equally share the space. */
  padding: 12px 16px;
  border: none; 
  background-color: var(--solid-white-static);
  color: var(--text-secondary);
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.2s ease, color 0.2s ease; 
  text-align: center;
}

.statusButton:not(:last-child) {
  border-right: 1px solid var(--border-color); /* separator line between buttons. */
}

.statusButton.activeStatus {
  background-color: var(--true-black-static);
  color: var(--solid-white-static);
  font-weight: 600;
}

.statusButton:hover:not(.activeStatus) {
  background-color: var(--background-primary);
}


.submitButton {
  padding: 14px 28px;
  border-radius: 10px;
  border: none;
  background-color: var(--true-black-static); 
  color: var(--solid-white-static);
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: background-color 0.2s ease, transform 0.1s ease; /* transition for hover and active states. */
  display: flex; /* for aligning icon and text. */
  align-items: center; 
  justify-content: center; 
  gap: 10px;
  width: 100%; 
  margin-top: 16px;
}

.submitButton:hover {
  background-color: #333; 
}

.submitButton:active {
  transform: translateY(1px); /* slight press down effect. */
}

.submitButton:disabled {
  background-color: var(--border-color);
  cursor: not-allowed;
  opacity: 0.7;
}

.spinner {
  width: 18px;
  height: 18px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-top-color: var(--solid-white-static);
  border-radius: 50%;
  animation: spin 0.8s linear infinite; /* spinning animation. */
  margin-right: 8px;
}

/* defines the 'spin' animation. */
@keyframes spin {
  to { transform: rotate(360deg); }
}

/* preview and icon picker styles */
.previewSection {
  background-color: var(--background-secondary); 
  padding: 20px;
  border-radius: 16px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.05);
}

.previewSection h3 {
  font-size: 1.1rem;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 16px;
  padding-bottom: 8px;
}

.cardPreview {
  display: flex; 
  flex-direction: column; 
  align-items: center; 
  justify-content: center; 
  gap: 12px;
  padding: 24px;
  background-color: var(--solid-white-static); 
  border-radius: 12px;
  min-height: 150px;
}

.previewIconArea {
  color: var(--text-primary); 
}

.previewTitle {
  font-size: 1.2rem;
  font-weight: 500;
  color: var(--text-primary);
  text-align: center;
  word-break: break-word;
}

.previewCardType { 
  font-size: 0.85rem;
  color: var(--text-secondary);
  margin-top: 4px;
}

.previewStampCount {
  font-size: 0.85rem;
  color: var(--loyal-blue-static);
  margin-top: 8px;
  font-weight: 500;
}

.loadingContainer {
  display: flex; /* for centering loading text. */
  justify-content: center; 
  align-items: center; 
  height: 100%;
  font-size: 1.2rem;
  color: var(--text-secondary);
}

/* new card type picker styles */
.cardTypePicker {
  display: grid; /* using grid for card type buttons. */
  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr)); /* responsive columns. */
  gap: 12px; 
  width: 100%;
}

.cardTypeButton {
  display: flex; 
  flex-direction: column; 
  align-items: center; 
  justify-content: flex-start; 
  gap: 6px; 
  padding: 16px; 
  border-radius: 12px; 
  border: 2px solid transparent; 
  background-color: transparent; 
  color: var(--text-primary); 
  cursor: pointer;
  transition: border-color 0.2s ease, transform 0.1s ease; 
  text-align: center;
  font-size: 0.8rem; 
  font-weight: 500;
}

.cardTypeIconWrapper {
  width: 100%;
  height: 70px; 
  background-color: var(--background-primary); 
  border-radius: 10px; 
  display: flex; /* for centering the image inside. */
  align-items: center; 
  justify-content: center; 
  margin-bottom: 4px; 
  transition: background-color 0.2s ease; 
  overflow: hidden;
}

.pickerImage { 
  max-width: 70%; 
  max-height: 70%; 
  object-fit: contain; /* ensures image scales nicely within its box. */
}

.cardTypeButton span { 
  color: var(--text-primary);
  font-weight: 500;
}

.cardTypeButton:hover .cardTypeIconWrapper {
  background-color: #c5d7f5; 
}

.cardTypeButton.selectedCardType {
  border-color: var(--true-black-static); 
}
.cardTypeButton.selectedCardType .cardTypeIconWrapper {
  background-color: #b0c8f0; 
}
.cardTypeButton.selectedCardType span {
 font-weight: 600;
}

.previewIconArea {
  width: 80px; 
  height: 80px; 
  display: flex; /* for centering the preview image. */
  align-items: center; 
  justify-content: center; 
  margin-bottom: 16px;
  overflow: hidden;
}

.previewImageActual { 
  max-width: 100%;
  max-height: 100%;
  object-fit: contain; /* ensures preview image scales nicely. */
}

/* responsive design */
@media screen and (max-width: 1024px) { /* tablet */
  .contentWrapper {
    flex-direction: column; /* stack form and preview vertically. */
    align-items: center; 
  }
  .mainFormArea {
    width: 100%;
    max-width: 600px; 
    flex: none; /* reset flex grow when stacked. */
  }
  .previewContainer {
    width: 100%;
    max-width: 600px; 
    min-width: unset;
    flex: none; 
  }
  .cardTypePicker {
    grid-template-columns: repeat(auto-fill, minmax(85px, 1fr)); 
  }
}

@media screen and (max-width: 768px) { /* mobile */

    .contentWrapper {
        margin-right: 50px; /* adjust for mobile sidebar behavior. */
    }
.createCardPage.menuClosed {
  margin-left: 0px;
}
  .header h1 {
    font-size: 1.8rem;
  }

  .formGroup {
    gap: 16px; 
  }

  .submitButton {
    padding: 12px 24px;
    font-size: 0.9rem;
  }

  .spinner {
    width: 16px;
    height: 16px;
  }

  .previewSection {
    padding: 16px;
  }

  .cardPreview {
    padding: 16px;
  }

  .cardTypePicker {
    grid-template-columns: repeat(auto-fill, minmax(85px, 1fr)); 
  }
}
