.loyaltyCardsPage {
  display: flex; /* enables flexbox layout. */
  flex-direction: column; /* stacks child elements vertically. */
  flex: 1; /* allows this element to grow and take available space. */
  padding: 0 24px 24px 24px;
  margin-left: 306px; 
  transition: margin-left 0.3s ease, margin-right 0.3s ease; /* smooth transition for margin changes. */
  background-color: var(--background-primary); 
  height: 100vh;
  overflow-y: auto; /* allows vertical scrolling if content overflows. */
}

.loyaltyCardsPage.menuClosed {
  margin-left: 80px; 
}

.stickyHeaderArea {
  position: sticky; /* makes this header stick to the top when scrolling. */
  top: 0;
  margin: -24px -24px 0 -24px; 
  padding-left: 24px; 
  padding-right: 24px; 
  background-color: var(--background-primary); 
  z-index: 50; /* ensures it stays above other content during scroll. */
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.07); 
  padding-bottom: 16px; 
}

.header {
  display: flex; /* enables flexbox for the header. */
  justify-content: space-between; /* spaces out title and notification button. */
  align-items: center; /* vertically aligns items in the center. */
  padding: 24px;
  margin-inline: -24px; 
  margin-bottom: 24px; 
  background-color: var(--background-secondary); 
}

.header h1 {
  font-size: 2.25rem;
  font-weight: 600;
  color: var(--text-primary);
}

.notificationButtonWrapper {
  position: relative; /* for positioning the notification modal. */
}

.notificationBtn {
  background: transparent;
  border: none;
  border-radius: 8px;
  padding: 0.5em;
  cursor: pointer;
  color: var(--text-primary);
  display: flex; /* for centering the icon inside. */
  align-items: center; 
  justify-content: center; 
}

.filterBarContainer {
  display: flex; /* lays out filter controls in a row. */
  align-items: center; 
  gap: 12px; 
  flex-wrap: wrap; /* allows filters to wrap on smaller screens. */
}

.filterLabel {
  font-size: 1rem; 
  color: var(--text-primary); 
  font-weight: 600; 
  margin-right: 4px; 
}

.filterDropdown {
  padding: 12px 16px; 
  padding-right: 36px; 
  border-radius: 12px; 
  border: 1px solid var(--background-secondary); 
  background-color: var(--background-secondary); 
  color: var(--text-primary); 
  font-size: 0.9rem; 
  font-weight: 500; 
  outline: none;
  appearance: none; /* removes default system appearance for select. */
  -webkit-appearance: none;
  -moz-appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M4 6L8 10L12 6' stroke='%23050505' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E"); /* custom dropdown arrow. */
  background-repeat: no-repeat;
  background-position: right 16px center;
  min-width: 100px; 
}

.filterDropdown:hover {
  border-color: var(--border-color); 
}
.filterDropdown:focus {
  border-color: var(--loyal-blue-static); 
}

.searchInputContainer {
  position: relative; /* for positioning the search icon. */
  display: flex; 
  align-items: center; 
  flex-grow: 1; /* allows search input to take available space. */
  max-width: 300px; 
}

.searchIcon {
  position: absolute; /* positions search icon inside the input field. */
  left: 16px; 
  color: var(--text-secondary); 
  pointer-events: none; /* allows clicks to pass through to the input. */
}

.searchInput {
  padding: 12px 16px; 
  padding-left: 44px; 
  border-radius: 12px; 
  border: 1px solid var(--text-primary); 
  background-color: var(--background-primary); 
  color: var(--text-primary);
  font-size: 0.9rem;
  font-weight: 500;
  outline: none;
  width: 100%; 
}
.searchInput::placeholder {
  color: var(--text-secondary);
  font-weight: 400;
}
.searchInput:focus {
  border-color: var(--loyal-blue-static);
}

.cardsDisplayArea {
  display: grid; /* using css grid for card layout. */
  grid-template-columns: repeat(auto-fit, minmax(260px, 1fr)); /* responsive columns for cards. */
  justify-content: start; /* aligns grid items to the start. */
  gap: 20px; 
  padding-top: 24px; 
}

.cardItem {
  display: flex; /* using flexbox for internal card layout. */
  flex-direction: column; /* stacks items vertically inside the card. */
  align-items: center; /* centers items horizontally. */
  padding: 20px; 
  background-color: var(--background-primary);
  border-radius: 20px; 
  gap: 12px; 
}

.cardTitle {
  font-size: 1.5rem; 
  font-weight: 600;
  color: var(--text-primary);
  text-align: center; 
  width: 100%; 
  margin-bottom: 4px; 
}

.phoneImageContainer {
  position: relative; /* for positioning the overlay icon. */
  width: 180px; 
  min-height: 250px; 
  display: flex; /* for centering the phone image. */
  justify-content: center; 
  align-items: center; 
  background-color: transparent; 
  border-radius: 28px; 
  padding: 15px; 
  overflow: hidden; 
}

.phoneImage {
  width: 100%;
  height: 100%; 
  object-fit: contain; /* ensures phone image scales nicely. */
  position: relative; 
  z-index: 3; /* phone bezel on top of the screen content. */
}

.overlayIconContainer {
  position: absolute; /* positions the card's main icon/image in the center of the phone screen. */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); /* precise centering trick. */
  display: flex; 
  align-items: center; 
  justify-content: center; 
  background-color: var(--background-secondary); 
  width: calc(100% - 40px); 
  height: calc(100% - 70px); 
  max-width: 110px; 
  max-height: 150px; 
  border-radius: 18px; 
  z-index: 2; /* screen content below the phone bezel. */
  overflow: hidden; 
}

.overlayImageActual { 
  max-width: 80%; 
  max-height: 80%; 
  object-fit: contain; /* ensures the overlay image scales nicely. */
}

.actionButtonImage { 
  max-width: 100%;
  max-height: 100%;
  object-fit: contain; /* for small images inside buttons, if used. */
}

.actionButton {
  padding: 12px 20px; 
  border-radius: 100px; 
  border: none;
  font-size: 0.875rem; 
  font-weight: 600;
  cursor: pointer;
  transition: background-color 0.2s ease; /* smooth transition for hover. */
  width: 90%; 
  max-width: 220px; 
  display: flex; /* for aligning icon and text in button. */
  align-items: center; 
  justify-content: center; 
  gap: 8px; 
}

.buttonIconWrapper { 
  display: flex; /* for centering the icon within its wrapper. */
  align-items: center; 
  justify-content: center; 
}

.primaryButton {
  background-color: var(--loyal-blue-static); 
  color: var(--solid-white-static);
}

.primaryButton:hover {
  background-color: #005bb5; 
}

.secondaryButton {
  background-color: var(--loyal-blue-static); 
  color: var(--solid-white-static);
}
.secondaryButton:hover {
  background-color: #005bb5; 
}

.statusTags {
  display: flex; /* lays out tags in a row. */
  gap: 8px;
  flex-wrap: wrap; /* allows tags to wrap if many. */
  justify-content: center; /* centers tags if they wrap. */
}

.statusTag {
  padding: 5px 12px; 
  border-radius: 14px; 
  font-size: 0.7rem; 
  font-weight: 500;
  display: flex; /* for aligning dot and text. */
  align-items: center; 
  gap: 4px;
}

.statusTag::before { /* the small dot for active/inactive tags. */
  content: '';
  display: inline-block;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  margin-right: 4px;
}

.activeTag {
  background-color: var(--accent-secondary-light-green);
  color: var(--accent-secondary-green);
}
.activeTag::before {
  background-color: var(--accent-secondary-green);
}

.inactiveTag {
  background-color: #FFD6D3; 
  color: #D32F2F; 
}
.inactiveTag::before {
  background-color: #D32F2F;
}

.typeTag { 
  background-color: var(--background-secondary); 
  color: var(--text-primary); 
}
.typeTag::before {
  display: none; /* type tags don't have a dot. */
}

.actionIcons {
  display: flex; /* lays out action icons in a row. */
  gap: 12px; 
  margin-top: auto; /* pushes icons to the bottom of the card if there's extra space. */
}

.iconButton {
  background-color: var(--background-secondary); 
  border: 1px solid var(--border-color); 
  color: var(--text-primary); 
  width: 36px; 
  height: 36px; 
  border-radius: 8px; 
  padding: 0; 
  cursor: pointer;
  display: flex; /* for centering the icon inside. */
  align-items: center; 
  justify-content: center; 
  transition: background-color 0.2s ease, color 0.2s ease; /* smooth transition for hover. */
}

.iconButton svg { 
  width: 18px; 
  height: 18px; 
}

.iconButton:hover {
  background-color: var(--border-color); 
  color: var(--text-primary);
}

/* responsive design */
@media screen and (max-width: 1024px) { /* tablet */
  .cardsDisplayArea {
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    gap: 16px;
  }
  .cardItem {
    padding: 16px;
    gap: 12px;
  }
  .cardTitle {
    font-size: 1.35rem;
  }
  .phoneImageContainer {
    width: 160px;
    min-height: 220px;
  }
  .overlayIconContainer {
    max-width: 100px;
    max-height: 140px;
  }
  .actionButton {
    font-size: 0.8rem;
    padding: 10px 18px;
  }
}


@media screen and (max-width: 768px) { /* mobile */
  .loyaltyCardsPage {
    margin-left: 0;
    margin-right: 60px; /* adjust for mobile sidebar behavior. */
  }
  .loyaltyCardsPage.menuClosed {
    margin-right: 60px;
    margin-left: 0;
  }
  .header h1 {
    font-size: 1.75rem;
  }
  .filterBarContainer {
    flex-direction: column; /* stack filter controls vertically. */
    align-items: stretch; /* make them full width. */
    gap: 12px; 
  }
  .filterLabel {
    margin-bottom: 4px; 
    text-align: left;
    width: 100%;
  }
  .filterDropdown {
    width: 100%; 
  }
  .searchInputContainer {
    max-width: none; 
    width: 100%;
  }
  .searchInput {
    width: 100%;
  }
  .cardsDisplayArea {
    grid-template-columns: 1fr; /* stack cards in a single column. */
    gap: 16px; 
  }

  .cardTitle {
    font-size: 1.25rem; 
  }
  .phoneImageContainer {
    width: 150px; 
    min-height: 200px; 
  }
   .overlayIconContainer {
    max-width: 90px;
    max-height: 130px;
  }
  .stickyHeaderArea {
     padding-top: 0px; 
  }
}
